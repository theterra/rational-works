{"version":3,"file":"static/webpack/static/development/pages/constitution.js.7b677831f1d5567fa286.hot-update.js","sources":["webpack:///./pages/constitution.js"],"sourcesContent":["import PrismicDOM from \"prismic-dom\";\nimport Layout from \"../components/Layout\";\nimport { getConstitutionAPI } from \"../api\";\nimport { linkResolver } from \"../helpers\";\n\nimport \"./constitution.scss\";\n\nconst Elements = PrismicDOM.RichText.Elements;\nconst htmlSerializer = (type, element, content, children) => {\n  switch (type) {\n    case Elements.paragraph:\n      return `<p class=\"const__list__paragraph\">${children.join(\"\")}</p>`;\n    case Elements.strong:\n      return `<strong>${children.join(\"\")}</strong>`;\n    case Elements.em:\n      return `<em>${children.join(\"\")}</em>`;\n  }\n};\n\nconst Constitution = ({ data }) => {\n  const pillars = data && data.pillars;\n  return (\n    <Layout circle paddingTop={\"4rem\"} showVerticalTitle>\n      <div>\n        <h1 className=\"const__title\">Constitution</h1>\n        <div className=\"const\">\n          <div className=\"const__list\">\n            {Array.isArray(pillars) &&\n              pillars.map((item, index) => {\n                console.log(\"<<<<<<<<>>>>>>>>>\", item);\n                let content = PrismicDOM.RichText.asHtml(\n                  item.pillar_content,\n                  linkResolver,\n                  htmlSerializer\n                );\n                let title = item.pillar_title.length\n                  ? item.pillar_title[0].text\n                  : \"\";\n                let imageUrl = item.pillar_image\n                  ? item.pillar_image.url\n                  : \"/static/assets/images/no-image.jpg\";\n\n                let formattedContent = (\n                  <div className=\"const__list__content\">\n                    <h3 className=\"const__list__title\">\n                      <span className=\"highlight__hover\">\n                        {title.toLowerCase()}\n                      </span>\n                    </h3>\n                    <div dangerouslySetInnerHTML={{ __html: content }} />\n                  </div>\n                );\n\n                let formattedImage = (\n                  <div className=\"const__list__image-box\">\n                    <div\n                      className=\"const__list__image\"\n                      style={{\n                        backgroundImage: `url(${imageUrl})`\n                      }}\n                    />\n                  </div>\n                );\n                const isTextRight = index % 2 == 0;\n\n                return (\n                  <div className=\"const__list__item\" key={index}>\n                    <div\n                      className={`const__list__item--${isTextRight ? 60 : 40} ${\n                        isTextRight ? \"const__list__item--content-order\" : \"const__list__item--image-order\"\n                      }`}\n                    >\n                      {isTextRight ? formattedContent : formattedImage}\n                    </div>\n                    <div\n                      className={`const__list__item--${\n                        !isTextRight ? 60 : 40\n                      } ${!isTextRight ? \"const__list__item--content-order\" : \"const__list__item--image-order\"}`}\n                    >\n                      {!isTextRight ? formattedContent : formattedImage}\n                    </div>\n                  </div>\n                );\n              })}\n          </div>\n        </div>\n      </div>\n    </Layout>\n  );\n};\n\nConstitution.getInitialProps = async () => {\n  const response = await getConstitutionAPI({});\n  console.log(\">>>>>>\", JSON.stringify(response.results[0].data));\n  return {\n    data: response.results[0].data\n  };\n};\n\nexport default Constitution;\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AAEA;AAEA;AACA;AAAA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AAAA;AACA;AANA;AAQA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAEA;AAAA;AACA;AAAA;AACA;AAAA;AAGA;AACA;AAKA;AAGA;AAIA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AAIA;AAAA;AAAA;AAAA;AAIA;AACA;AAAA;AAEA;AACA;AACA;AADA;AAFA;AAQA;AAEA;AACA;AAAA;AAAA;AAEA;AADA;AAQA;AADA;AASA;AAMA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AACA;AACA;AAFA;AAIA;AADA;AACA;AAJA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAQA;;;;;;;;;;;;;;;;;;;;;;;A","sourceRoot":""}