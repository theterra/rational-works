{"version":3,"file":"static/development/pages/post.js","sources":["webpack:///webpack/bootstrap","webpack:///./api/index.js","webpack:///./components/BlogPostCard.js","webpack:///./config.js","webpack:///./helpers/htmlSerializer.js","webpack:///./helpers/index.js","webpack:///(webpack)/buildin/harmony-module.js","webpack:///./pages/post.js","webpack:///external \"@babel/runtime/regenerator\"","webpack:///external \"moment\"","webpack:///external \"next/router\"","webpack:///external \"prismic-dom\"","webpack:///external \"prismic-javascript\"","webpack:///external \"react\""],"sourcesContent":[" \t// The module cache\n \tvar installedModules = require('../../../ssr-module-cache.js');\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tvar threw = true;\n \t\ttry {\n \t\t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n \t\t\tthrew = false;\n \t\t} finally {\n \t\t\tif(threw) delete installedModules[moduleId];\n \t\t}\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 3);\n","import Prismic from \"prismic-javascript\";\nimport { PRISMIC_API_URL } from \"../config\";\n\nconst getBlogPostsAPI = async params => {\n  try {\n    // We initialise the API with Prismic's kit\n    const API = await Prismic.api(PRISMIC_API_URL);\n    // Here we just query the documents with a filter of only returning\n    // the type of blog_post and order them. Full docs can be found here:\n    // https://github.com/prismicio/prismic-javascript#query-the-content\n    const response = await API.query(\n      Prismic.Predicates.at(\"document.type\", \"scopeblog\"),\n      {\n        orderings: \"[my.scopeblog.date desc]\",\n        ...params\n        // params will be extra parameters we can pass through with api calls\n        // such as how many documents to return\n      }\n    );\n    return response;\n  } catch (error) {\n    return error;\n  }\n};\n\nconst getFeaturedBlogPostAPI = async params => {\n  try {\n    // We initialise the API with Prismic's kit\n    const API = await Prismic.api(PRISMIC_API_URL);\n    // Here we just query the documents with a filter of only returning\n    // the type of blog_post and order them. Full docs can be found here:\n    // https://github.com/prismicio/prismic-javascript#query-the-content\n    const response = await API.query(\n      Prismic.Predicates.at(\"document.tags\", ['featured']),\n      {\n        orderings: \"[my.scopeblog.date desc]\",\n        ...params\n        // params will be extra parameters we can pass through with api calls\n        // such as how many documents to return\n      }\n    );\n    return response;\n  } catch (error) {\n    return error;\n  }\n};\n\nconst getBlogPostAPI = async slug => {\n  try {\n    const API = await Prismic.api(PRISMIC_API_URL);\n    // we pass up the slug to request the correct post\n    const response = await API.query(\n      Prismic.Predicates.at(\"my.scopeblog.uid\", slug)\n    );\n    return response.results;\n  } catch (error) {\n    console.error(error);\n    return error;\n  }\n};\n\nexport { getBlogPostsAPI, getBlogPostAPI, getFeaturedBlogPostAPI };\n","import { Date } from \"prismic-dom\";\nimport moment from \"moment\";\nimport Router from \"next/router\";\n\nimport { linkResolver } from \"../helpers\";\n\nimport \"./blogPosts.scss\";\n\nconst routeToPost = data => {\n  return Router.push(linkResolver(data));\n};\n\nconst BlogPostCard = ({ post = {} }) => {\n  const data = post.data || {};\n  const primaryImage = data && data.body.find(item => item.type === \"image\");\n  const imageUrl = primaryImage\n    ? primaryImage.url\n    : \"/static/assets/images/no-image.png\";\n  return (\n    <div className=\"blog__posts__item\">\n      <div className=\"blog__posts__image-box\">\n        <div\n          className=\"blog__posts__image\"\n          style={{\n            backgroundImage: `url(${imageUrl})`\n          }}\n          onClick={() => routeToPost(post)}\n        />\n      </div>\n      <div className=\"blog__posts__meta\">\n        <span className=\"date\">\n          {moment(Date(post.last_publication_date)).format(\"MMM DD YYYY\")}\n        </span>\n      </div>\n      <div className=\"blog__posts__content\">\n        <h3 className=\"blog__posts__title\" onClick={() => routeToPost(post)}>\n          {data.title.length ? data.title[0].text : \"\"}\n        </h3>\n        <p className=\"blog__posts__desc\" onClick={() => routeToPost(post)}>\n          {data.summary.length ? data.summary[0].text : \"\"}\n        </p>\n      </div>\n      <div className=\"read__more\" onClick={() => routeToPost(post)}>\n        Read more<span>&rarr;</span>\n      </div>\n    </div>\n  );\n};\n\nexport default BlogPostCard;\n","export const PRISMIC_API_URL = 'https://scope-test.prismic.io/api/v2';\n","let PrismicDOM = require('prismic-dom');\nlet Elements = PrismicDOM.RichText.Elements;\n\nlet htmlSerializer = function (type, element, content, children) {\n  switch(type) {\n    case Elements.heading1: return `<h1>${children.join('')}</h1>`;\n    case Elements.heading2: return `<h2>${children.join('')}</h2>`;\n    case Elements.heading3: return `<h3>${children.join('')}</h3>`;\n    case Elements.heading4: return `<h4>${children.join('')}</h4>`;\n    case Elements.heading5: return `<h5>${children.join('')}</h5>`;\n    case Elements.heading6: return `<h6>${children.join('')}</h6>`;\n    case Elements.paragraph: return `<p class=\"article__paragraph article__line-height--2\">${children.join('')}</p>`;\n    case Elements.preformatted: return `<pre>${children.join('')}</pre>`;\n    case Elements.strong: return `<strong>${children.join('')}</strong>`;\n    case Elements.em: return `<em>${children.join('')}</em>`;\n    case Elements.listItem: return `<li>${children.join('')}</li>`;\n    case Elements.oListItem: return `<li>${children.join('')}</li>`;\n    case Elements.list: return `<ul>${children.join('')}</ul>`;\n    case Elements.oList: return `<ol>${children.join('')}</ol>`;\n    case Elements.image:\n      var linkUrl = element.linkTo ? PrismicDOM.Link.url(element.linkTo, module.exports.linkResolver) : null;\n      var linkTarget = element.linkTo && element.linkTo.target ? `target=\"${element.linkTo.target}\" rel=\"noopener\"` : '';\n      var wrapperClassList = [element.label || '', 'block-img'];\n      var img = `<img src=\"${element.url}\" alt=\"${element.alt || ''}\" copyright=\"${element.copyright || ''}\">`;\n      return (`\n        <p class=\"${wrapperClassList.join(' ')}\">\n          ${linkUrl ? `<a ${linkTarget} href=\"${linkUrl}\">${img}</a>` : img}\n        </p>\n      `);\n    case Elements.embed:\n      return (`\n        <div data-oembed=\"${element.oembed.embed_url}\"\n          data-oembed-type=\"${element.oembed.type}\"\n          data-oembed-provider=\"${element.oembed.provider_name}\"\n        >\n          ${element.oembed.html}\n        </div>\n      `);\n    case Elements.hyperlink:\n      var target = element.data.target ? `target=\"${element.data.target}\" rel=\"noopener\"` : '';\n      var linkUrl = PrismicDOM.Link.url(element.data, linkResolver);\n      return `<a ${target} href=\"${linkUrl}\">${children.join('')}</a>`\n    case Elements.label:\n      var label = element.data.label ? ` class=\"${element.data.label}\"` : '';\n      return `<span ${label}>${children.join('')}</span>`;\n    case Elements.span: return content ? content.replace(/\\n/g, \"<br />\") : '';\n    default: return null;\n  }\n};\n\nexport default htmlSerializer","function linkResolver(doc) {\n  if (doc.type === \"scopeblog\") {\n    return `/blog/${doc.uid}`;\n  }\n  return \"/\";\n}\n\nmodule.exports = {\n  linkResolver\n};\n","module.exports = function(originalModule) {\n\tif (!originalModule.webpackPolyfill) {\n\t\tvar module = Object.create(originalModule);\n\t\t// module.parent = undefined by default\n\t\tif (!module.children) module.children = [];\n\t\tObject.defineProperty(module, \"loaded\", {\n\t\t\tenumerable: true,\n\t\t\tget: function() {\n\t\t\t\treturn module.l;\n\t\t\t}\n\t\t});\n\t\tObject.defineProperty(module, \"id\", {\n\t\t\tenumerable: true,\n\t\t\tget: function() {\n\t\t\t\treturn module.i;\n\t\t\t}\n\t\t});\n\t\tObject.defineProperty(module, \"exports\", {\n\t\t\tenumerable: true\n\t\t});\n\t\tmodule.webpackPolyfill = 1;\n\t}\n\treturn module;\n};\n","import React, { Component } from \"react\";\nimport PrismicDOM from \"prismic-dom\";\n\nimport { getBlogPostAPI, getBlogPostsAPI } from \"../api\";\nimport linkResolver from \"../helpers\";\nimport htmlSerializer from \"../helpers/htmlSerializer\";\n\nimport \"./post.scss\";\nimport BlogPostCard from \"../components/BlogPostCard\";\n\nexport default class BlogPost extends Component {\n  static async getInitialProps(context) {\n    // we get the slug of the post so that we can\n    // query the API with it\n    const { slug } = context.query;\n    const response = await getBlogPostAPI(slug);\n    const suggestedPosts = await getBlogPostsAPI({ pageSize: 3 });\n    return {\n      postData: response[0],\n      suggestedPosts: suggestedPosts.results\n    };\n  }\n\n  shareHandler = () => {\n    if (FB) {\n      FB.ui(\n        {\n          method: \"share\",\n          display: \"popup\",\n          href: \"https://sour-zebra-65.localtunnel.me/blog/hello-test\"\n        },\n        function(response) {}\n      );\n    }\n  };\n\n  render() {\n    const { suggestedPosts, postData } = this.props;\n    const post = postData.data;\n    return (\n      //   <article>\n      //     <h1>{post.title.length ? post.title[0].text : \"\"}</h1>\n      //     {/* Here we pass our rich text field to Prismics RichText renderer, along with our linkResolver */}\n      //     {RichText.render(post.body, linkResolver)}\n      //   </article>\n      <React.Fragment>\n        <section className=\"article\">\n          <div className=\"article--container\">\n            <h1 className=\"article__title\">\n              {post.title.length ? post.title[0].text : \"\"}\n            </h1>\n            <p className=\"article__summary\">\n              {post.summary.length ? post.summary[0].text : \"\"}\n            </p>\n            <div className=\"article__content\">\n              <div\n                dangerouslySetInnerHTML={{\n                  __html: PrismicDOM.RichText.asHtml(\n                    post.body,\n                    linkResolver,\n                    htmlSerializer\n                  )\n                }}\n              />\n            </div>\n          </div>\n        </section>\n\n        <section className=\"article__related__posts\">\n          <section className=\"blog__posts\">\n            {/* <p>More articles</p> */}\n            <div className=\"blog__posts--container\">\n              {Array.isArray(suggestedPosts) &&\n                suggestedPosts.map((post, index) => (\n                  <BlogPostCard key={index} post={post} />\n                ))}\n            </div>\n          </section>\n        </section>\n        <button className=\"share_button\" onClick={this.shareHandler}>\n          Share\n        </button>\n        <a\n          className=\"\"\n          href=\"https://twitter.com/intent/tweet\"\n          data-size=\"large\"\n        >\n          Tweet\n        </a>\n      </React.Fragment>\n    );\n  }\n}\n","module.exports = require(\"@babel/runtime/regenerator\");","module.exports = require(\"moment\");","module.exports = require(\"next/router\");","module.exports = require(\"prismic-dom\");","module.exports = require(\"prismic-javascript\");","module.exports = require(\"react\");"],"mappings":";;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACxFA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAGA;AAHA;AAAA;AAUA;AAHA;AACA;AARA;AAOA;AAPA;AACA;AADA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AACA;AAqBA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAGA;AAHA;AAAA;AAUA;AAHA;AACA;AARA;AAOA;AAPA;AACA;AADA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AACA;AAqBA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAEA;AAFA;AAAA;AACA;AADA;AAIA;AAJA;AACA;AADA;AAAA;AAAA;AASA;AATA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;AChDA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AACA;AAGA;AACA;AAAA;AACA;AAAA;AAEA;AACA;AACA;AADA;AAGA;AAAA;AAAA;AALA;AAQA;AAAA;AACA;AAAA;AAIA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAIA;AAAA;AAAA;AAAA;AAAA;AAKA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;ACjDA;AAAA;AAAA;;;;;;;;;;;;ACAA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAIA;AACA;AACA;AAOA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AA1CA;AA4CA;AACA;AACA;;;;;;;;;;;;AClDA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AADA;;;;;;;;;;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACvBA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;AAaA;AACA;AACA;AAEA;AACA;AACA;AAHA;AAOA;AACA;AACA;;;;;;AACA;AAAA;AAAA;AAAA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AAGA;AAAA;AAGA;AAAA;AAEA;AACA;AADA;AADA;AAaA;AAAA;AACA;AAAA;AAEA;AAAA;AAEA;AACA;AAAA;AAAA;AADA;AAMA;AAAA;AAAA;AAIA;AACA;AACA;AAHA;AA3CA;AAoDA;;;;;;AAhFA;;;;;;AACA;AACA;AACA;;AACA;AACA;;AADA;;AACA;AAAA;AAAA;AACA;;AADA;AACA;AACA;AACA;AAFA;AACA;;;;;;;;;;;;;;;;;;AARA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACXA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;A","sourceRoot":""}